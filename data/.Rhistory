# remove regions (last 7 rows)
human <- human[-c(155:162),]
row.names(human) <- human$Country
View(human)
human <- remove(Country)
human <- human[,-'Country']
human <- human[,-('Country')]
human <- human[,-1]
# read the table
human <- read.csv('human.csv', header=TRUE, sep=',')
# manipulate GNI variable to numeric
str(human$GNI) ## GNI seems to be a factor
human$GNI <- as.numeric(human$GNI) # values abecame integers instead of doubles :/
# keep only the following columns
keep <-  c("country", "edu2_sex", "labour_sex", "education_exp", "Life_exp", "GNI", "mmortality", "birth_rate", "parliament_repr")
human <- human %>% select(one_of(keep))
names(human) <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
complete.cases(human)
human <- human[complete.cases(human), ]
# remove regions (last 7 rows)
human <- human[-c(155:162),]
row.names(human) <- human$Country
human <- human[,-1]
View(human)
write.csv(human, 'human.csv', row.names = TRUE, sep=',')
write.csv(human, 'human.csv', row.names = TRUE)
```{r child = "chapter5.Rmd"}
# access the MASS package
library(MASS)
library(ggplot2)
library(GGally)
# load the data
human <- read.csv('./data/human.csv', header=TRUE, sep=',')
pairs(human)
pairs(human, main='human data overview')
ggpairs(human, main='Human data overview')
cor(human_) %>% corrplot()
cor(human) %>% corrplot()
View(human)
str(human$GNI)
str(human)
View(human)
# load the data
human <- read.csv('./data/human.csv', header=TRUE, sep=',', row.names=TRUE)
# load the data
human <- read.csv('./data/human.csv', header=TRUE, sep=',', names=TRUE)
View(human)
str(human)
# load the data
human <- read.csv('./data/human.csv', header=TRUE, sep=',')
#access libraries
library(dplyr)
library(tidyr)
# load human_development and gender_inequality datasets
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# explore datasets
str(hd) # 195 observations, 8 variables. chr, num and int values
str(gii)# 195 observations, 10 variables. int, char, num
summary(hd) # no summary for gross.national.... because it's 'char'
summary(gii)
# rename columns
names(hd) <- c('HDI_rank', 'country', 'HDI', 'Life_exp', 'education_exp', 'education_mean', 'GNI', 'GNI_HDI_rank_diff')
names(gii) <- c('GII_rank', 'country', 'GII', 'mmortality', 'birth_rate', 'parliament_repr', 'sec_edu_f', 'sec_edu_m', 'labour_f', 'labour_m'  )
# add new variables to gii
gii <- mutate(gii, edu2_sex=sec_edu_f/sec_edu_m, labour_sex=labour_f/labour_m)
# join hd and gii datasets, keep countries that are included in both datasets
human <- inner_join(hd, gii, by='country')
dim(human) # 195 observations, 19 variables
# save 'human' to data folder
write.csv(human, 'human.csv', row.names=FALSE)
###### part2 #######
# we will continue wrangling the human data. The data consists of 195 countries and 19 variables that describe the
# countries human development index and gender inequality. In addition to the original variables, we have also added
# two variables, edu2_sex=sec_edu_f/sec_edu_m, labour_sex=labour_f/labour_m, which describe the ratio between
# gender specific education and labour scores.
# read the table
human <- read.csv('human.csv', header=TRUE, sep=',')
# manipulate GNI variable to numeric
str(human$GNI) ## GNI seems to be a factor
human$GNI <- as.numeric(human$GNI) # values abecame integers instead of doubles :/
# keep only the following columns
keep <-  c("country", "edu2_sex", "labour_sex", "education_exp", "Life_exp", "GNI", "mmortality", "birth_rate", "parliament_repr")
human <- human %>% select(one_of(keep))
names(human) <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
# remove rows with missing values
complete.cases(human)
human <- human[complete.cases(human), ]
# remove regions (last 7 rows)
human <- human[-c(155:162),]
#change countries as rownames
row.names(human) <- human$Country
human <- human[,-1]
#overwrite human-data with the new data
write.csv(human, 'human.csv', row.names = TRUE)
View(human)
# Birgitta Paranko
# edited 2.12.2018
# Data wrangling for human_development and gender_inequality datasets
#access libraries
library(dplyr)
library(tidyr)
# load human_development and gender_inequality datasets
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# explore datasets
str(hd) # 195 observations, 8 variables. chr, num and int values
str(gii)# 195 observations, 10 variables. int, char, num
summary(hd) # no summary for gross.national.... because it's 'char'
summary(gii)
# rename columns
names(hd) <- c('HDI_rank', 'country', 'HDI', 'Life_exp', 'education_exp', 'education_mean', 'GNI', 'GNI_HDI_rank_diff')
names(gii) <- c('GII_rank', 'country', 'GII', 'mmortality', 'birth_rate', 'parliament_repr', 'sec_edu_f', 'sec_edu_m', 'labour_f', 'labour_m'  )
# add new variables to gii
gii <- mutate(gii, edu2_sex=sec_edu_f/sec_edu_m, labour_sex=labour_f/labour_m)
# join hd and gii datasets, keep countries that are included in both datasets
human <- inner_join(hd, gii, by='country')
dim(human) # 195 observations, 19 variables
# save 'human' to data folder
write.csv(human, 'human.csv', row.names=FALSE)
###### part2 #######
# we will continue wrangling the human data. The data consists of 195 countries and 19 variables that describe the
# countries human development index and gender inequality. In addition to the original variables, we have also added
# two variables, edu2_sex=sec_edu_f/sec_edu_m, labour_sex=labour_f/labour_m, which describe the ratio between
# gender specific education and labour scores.
# read the table
human <- read.csv('human.csv', header=TRUE, sep=',')
# manipulate GNI variable to numeric
str(human$GNI) ## GNI seems to be a factor
human$GNI <- as.numeric(human$GNI) # values abecame integers instead of doubles :/
# keep only the following columns
keep <-  c("country", "edu2_sex", "labour_sex", "education_exp", "Life_exp", "GNI", "mmortality", "birth_rate", "parliament_repr")
human <- human %>% select(one_of(keep))
names(human) <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
# remove rows with missing values
complete.cases(human)
human <- human[complete.cases(human), ]
# remove regions (last 7 rows)
human <- human[-c(155:162),]
View(human)
#access libraries
library(dplyr)
library(tidyr)
# load human_development and gender_inequality datasets
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# explore datasets
str(hd) # 195 observations, 8 variables. chr, num and int values
str(gii)# 195 observations, 10 variables. int, char, num
summary(hd) # no summary for gross.national.... because it's 'char'
summary(gii)
# rename columns
names(hd) <- c('HDI_rank', 'country', 'HDI', 'Life_exp', 'education_exp', 'education_mean', 'GNI', 'GNI_HDI_rank_diff')
names(gii) <- c('GII_rank', 'country', 'GII', 'mmortality', 'birth_rate', 'parliament_repr', 'sec_edu_f', 'sec_edu_m', 'labour_f', 'labour_m'  )
# add new variables to gii
gii <- mutate(gii, edu2_sex=sec_edu_f/sec_edu_m, labour_sex=labour_f/labour_m)
# join hd and gii datasets, keep countries that are included in both datasets
human <- inner_join(hd, gii, by='country')
dim(human) # 195 observations, 19 variables
# save 'human' to data folder
write.csv(human, 'human.csv', row.names=FALSE)
###### part2 #######
# we will continue wrangling the human data. The data consists of 195 countries and 19 variables that describe the
# countries human development index and gender inequality. In addition to the original variables, we have also added
# two variables, edu2_sex=sec_edu_f/sec_edu_m, labour_sex=labour_f/labour_m, which describe the ratio between
# gender specific education and labour scores.
# read the table
human <- read.csv('human.csv', header=TRUE, sep=',')
# manipulate GNI variable to numeric
str(human$GNI) ## GNI seems to be a factor
human$GNI <- as.numeric(human$GNI) # values abecame integers instead of doubles :/
# keep only the following columns
keep <-  c("country", "edu2_sex", "labour_sex", "education_exp", "Life_exp", "GNI", "mmortality", "birth_rate", "parliament_repr")
human <- human %>% select(one_of(keep))
names(human) <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
# remove rows with missing values
complete.cases(human)
human <- human[complete.cases(human), ]
# remove regions (last 7 rows)
human <- human[-c(155:162),]
#change countries as rownames
row.names(human) <- human$Country
View(human)
# Birgitta Paranko
# edited 2.12.2018
# Data wrangling for human_development and gender_inequality datasets
#access libraries
library(dplyr)
library(tidyr)
# load human_development and gender_inequality datasets
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# explore datasets
str(hd) # 195 observations, 8 variables. chr, num and int values
str(gii)# 195 observations, 10 variables. int, char, num
summary(hd) # no summary for gross.national.... because it's 'char'
summary(gii)
# rename columns
names(hd) <- c('HDI_rank', 'country', 'HDI', 'Life_exp', 'education_exp', 'education_mean', 'GNI', 'GNI_HDI_rank_diff')
names(gii) <- c('GII_rank', 'country', 'GII', 'mmortality', 'birth_rate', 'parliament_repr', 'sec_edu_f', 'sec_edu_m', 'labour_f', 'labour_m'  )
# add new variables to gii
gii <- mutate(gii, edu2_sex=sec_edu_f/sec_edu_m, labour_sex=labour_f/labour_m)
# join hd and gii datasets, keep countries that are included in both datasets
human <- inner_join(hd, gii, by='country')
dim(human) # 195 observations, 19 variables
# save 'human' to data folder
write.csv(human, 'human.csv', row.names=FALSE)
###### part2 #######
# we will continue wrangling the human data. The data consists of 195 countries and 19 variables that describe the
# countries human development index and gender inequality. In addition to the original variables, we have also added
# two variables, edu2_sex=sec_edu_f/sec_edu_m, labour_sex=labour_f/labour_m, which describe the ratio between
# gender specific education and labour scores.
# read the table
human <- read.csv('human.csv', header=TRUE, sep=',')
# manipulate GNI variable to numeric
str(human$GNI) ## GNI seems to be a factor
human$GNI <- as.numeric(human$GNI) # values abecame integers instead of doubles :/
# keep only the following columns
keep <-  c("country", "edu2_sex", "labour_sex", "education_exp", "Life_exp", "GNI", "mmortality", "birth_rate", "parliament_repr")
human <- human %>% select(one_of(keep))
names(human) <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
# remove rows with missing values
complete.cases(human)
human <- human[complete.cases(human), ]
# remove regions (last 7 rows)
human <- human[-c(155:162),]
View(human)
# Birgitta Paranko
# edited 2.12.2018
# Data wrangling for human_development and gender_inequality datasets
#access libraries
library(dplyr)
library(tidyr)
# load human_development and gender_inequality datasets
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# explore datasets
str(hd) # 195 observations, 8 variables. chr, num and int values
str(gii)# 195 observations, 10 variables. int, char, num
summary(hd) # no summary for gross.national.... because it's 'char'
summary(gii)
# rename columns
names(hd) <- c('HDI_rank', 'country', 'HDI', 'Life_exp', 'education_exp', 'education_mean', 'GNI', 'GNI_HDI_rank_diff')
names(gii) <- c('GII_rank', 'country', 'GII', 'mmortality', 'birth_rate', 'parliament_repr', 'sec_edu_f', 'sec_edu_m', 'labour_f', 'labour_m'  )
# add new variables to gii
gii <- mutate(gii, edu2_sex=sec_edu_f/sec_edu_m, labour_sex=labour_f/labour_m)
# join hd and gii datasets, keep countries that are included in both datasets
human <- inner_join(hd, gii, by='country')
dim(human) # 195 observations, 19 variables
View(human)
write.csv(human, 'human.csv', row.names=FALSE)
# read the table
human <- read.csv('human.csv', header=TRUE, sep=',')
View(human)
str(human$GNI) ## GNI seems to be a factor
human$GNI <- as.numeric(human$GNI) # values abecame integers instead of doubles :/
# keep only the following columns
keep <-  c("country", "edu2_sex", "labour_sex", "education_exp", "Life_exp", "GNI", "mmortality", "birth_rate", "parliament_repr")
human <- human %>% select(one_of(keep))
names(human) <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
# remove rows with missing values
complete.cases(human)
human <- human[complete.cases(human), ]
# remove regions (last 7 rows)
human <- human[-c(155:162),]
View(human)
human <- read.csv('human.csv', header=TRUE, sep=',')
View(human)
# manipulate GNI variable to numeric
str(human$GNI) ## GNI seems to be a factor
human$GNI <- as.numeric(human$GNI) # values abecame integers instead of doubles :/
# keep only the following columns
keep <-  c("country", "edu2_sex", "labour_sex", "education_exp", "Life_exp", "GNI", "mmortality", "birth_rate", "parliament_repr")
human <- human %>% select(one_of(keep))
names(human) <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
View(human)
# read the table
human <- read.csv('human.csv', header=TRUE, sep=',')
# manipulate GNI variable to numeric
str(human$GNI) ## GNI seems to be a factor
human$GNI <- as.numeric(human$GNI) # values abecame integers instead of doubles :/
# keep only the following columns
keep <-  c("country", "edu2_sex", "labour_sex", "education_exp", "Life_exp", "GNI", "mmortality", "birth_rate", "parliament_repr")
human %>% select(one_of(keep))
human %>% select(human, one_of(keep))
human %>% select(one_of(keep))
View(human)
View(hd)
human %>% select(human, one_of(keep))
human %>% select(one_of(keep))
human %>% select(one_of(keep))
human <- select(human, one_of(keep))
# keep only the following columns
keep <-  c("country", "edu2_sex", "labour_sex", "education_exp", "Life_exp", "GNI", "mmortality", "birth_rate", "parliament_repr")
human <- select(human, one_of(keep))
human <- dplyr::select(human, one_of(keep))
View(human)
names(human) <- c( "Country", "Edu2.FM", "Labo.FM", "Edu.Exp", "Life.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
complete.cases(human)
human <- human[complete.cases(human), ]
# remove regions (last 7 rows)
human <- human[-c(155:162),]
#change countries as rownames
row.names(human) <- human$Country
human <- human[,-1]
View(human)
write.csv(human, 'human.csv', row.names = TRUE)
# load the data
human <- read.csv('./data/human.csv', header=TRUE, sep=',')
View(human)
# load the data
human <- read.csv('./data/human.csv', header=TRUE, sep=',', index=TRUE)
# load the data
human <- read.csv('./data/human.csv', header=TRUE, sep=',')
View(human)
# change countries to rownames
row.names(human) <- human$X
View(human)
human <- human[, -1]
View(human)
#overview of the data
summary(human, main='summary of "human" data')
ggpairs(human, mapping=aes(main='Human data overview'))
cor(human) %>% corrplot()
library(corrplot)
import('corrplot')
install.packages('corrplot')
library(corrplot)
cor(human) %>% corrplot()
ggpairs(human)
View(human)
ggpairs(human)
cor(human) %>% corrplot()
# perform principal component analysis (with the SVD method)
pca_human <- prcomp(human_std)
# perform principal component analysis (with the SVD method)
pca_human <- prcomp(human)
# draw a biplot of the principal component representation and the original variables
biplot(pca_human, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
# perform principal component analysis (with the SVD method)
pca_human <- prcomp(human)
s <- summary(pca_human)
s
# rounded percetanges of variance captured by each PC
pca_pr <- round(1*s$importance[2, ], digits = 5)
# print out the percentages of variance
pca_pr
# create object pc_lab to be used as axis labels
pca_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
biplot(pca_human, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pca_lab[1], ylab = pca_lab[2])
# rounded percetanges of variance captured by each PC
pca_pr <- round(100*s$importance[2, ], digits = 1)
# create object pc_lab to be used as axis labels
pca_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
# draw a biplot
biplot(pca_human, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pca_lab[1], ylab = pca_lab[2])
# draw a biplot
biplot(pca_human, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pca_lab[1], ylab = pca_lab[2], main='PCA no scaling)
# draw a biplot
biplot(pca_human, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pca_lab[1], ylab = pca_lab[2], main='PCA no scaling')
biplot(pca_human, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pca_lab[1], ylab = pca_lab[2], main='PCA no scaling')
human_scaled <- scale(human)
summary(human_scaled)
pca_human_scaled <- prcomp(human_scaled)
s <- summary(pca_human_scaled)
# rounded percetanges of variance captured by each PC
pca_pr_scaled <- round(100*s$importance[2, ], digits = 1)
# create object pc_lab to be used as axis labels
pca_lab <- paste0(names(pca_pr_scaled), " (", pca_pr, "%)")
# create object pc_lab to be used as axis labels
pca_lab <- paste0(names(pca_pr_scaled), " (", pca_pr_scaled, "%)")
biplot(pca_human_scaled, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pca_lab[1], ylab = pca_lab[2], main='PCA scaled')
# scale the data
human_scaled <- scale(human)
#summary(human_scaled)
pca_human_scaled <- prcomp(human_scaled)
s <- summary(pca_human_scaled)
#s
# rounded percetanges of variance captured by each PC
pca_pr_scaled <- round(100*s$importance[2, ], digits = 1)
# print out the percentages of variance
#pca_pr
# create object pc_lab to be used as axis labels
pca_lab <- paste0(names(pca_pr_scaled), " (", pca_pr_scaled, "%)")
# draw a biplot
biplot(pca_human_scaled, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pca_lab[1], ylab = pca_lab[2], main='PCA scaled')
pca_human <- prcomp(human)
s <- summary(pca_human)
#s
# rounded percetanges of variance captured by each PC
pca_pr <- round(100*s$importance[2, ], digits = 1)
# print out the percentages of variance
#pca_pr
# create object pc_lab to be used as axis labels
pca_lab <- paste0(names(pca_pr), " (", pca_pr, "%)")
# draw a biplot
biplot(pca_human, cex = c(0.8, 1), col = c("grey40", "deeppink2"), xlab = pca_lab[1], ylab = pca_lab[2], main='PCA no scaling')
View(pca_human)
View(pca_human)
#overview of the data
summary(human, main='summary of "human" data')
# access the MASS package
library(Factominer)
install.packages('Factominer')
install.packages('FactoMineR')
# access the MASS package
library(FactoMineR))
# access the MASS package
library(FactoMineR)
data(Tea)
data('Tea')
data("Tea"")
data("Tea")
data("Tea")
data("tea")
# column names to keep in the dataset
keep_columns <- c("Tea", "How", "how", "sugar", "where", "lunch")
# select the 'keep_columns' to create a new dataset
tea_time <- select(tea, one_of(keep_columns))
tea <- data("tea")
# select the 'keep_columns' to create a new dataset
tea_time <- select(tea, one_of(keep_columns))
# select the 'keep_columns' to create a new dataset
tea_time <- select(tea, one_of(keep_columns))
# select the 'keep_columns' to create a new dataset
tea_time <- dplyr::select(tea, one_of(keep_columns))
tea <- data(tea)
tea <- data("tea"")
tea <- data("tea")
tea <- data("tea")
View(s)
tea <- data(tea)
View(s)
tea
data(tea)
tea
tea
View(tea)
# column names to keep in the dataset
keep_columns <- c("Tea", "How", "how", "sugar", "where", "lunch")
# select the 'keep_columns' to create a new dataset
tea_time <- dplyr::select(tea, one_of(keep_columns))
# look at the summaries and structure of the data
summary(tea_time)
str(tea_time)
# visualize the dataset
gather(tea_time) %>% ggplot(aes(value)) + geom_bar() + facet_wrap("key", scales = "free") + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
# multiple correspondence analysis
mca <- MCA(tea_time, graph = FALSE)
# summary of the model
summary(mca)
# summary of the model
summary(mca)
# visualize MCA
plot(mca, invisible=c("ind"), habillage = "quali")
View(tea)
# column names to keep in the dataset
keep_columns <- c("Tea", "sex", "SPC", "price" "where", "age-Q", )
# select the 'keep_columns' to create a new dataset
tea_time <- dplyr::select(tea, one_of(keep_columns))
View(tea_time)
View(tea)
# column names to keep in the dataset
keep_columns <- c("Tea", "sex", "SPC", "price" , "age-Q", "where" )
# select the 'keep_columns' to create a new dataset
tea_time <- dplyr::select(tea, one_of(keep_columns))
View(tea)
# column names to keep in the dataset
keep_columns <- c("Tea", "sex", "SPC", "price" , "age_Q", "where" )
# select the 'keep_columns' to create a new dataset
tea_time <- dplyr::select(tea, one_of(keep_columns))
View(tea_time)
# look at the summaries and structure of the data
summary(tea_time)
str(tea_time)
# multiple correspondence analysis
mca <- MCA(tea_time, graph = FALSE)
# summary of the model
summary(mca)
# summary of the model
summary(mca)
# visualize MCA
plot(mca, invisible=c("ind"), habillage = "quali")
# visualize MCA
plot(mca, invisible=c("var"), habillage = "quali")
# visualize MCA
plot(mca, invisible=c("var"), habillage = "quali", main='MCA factor map: individuals)
# visualize MCA
plot(mca, invisible=c("var"), habillage = "quali", main='MCA factor map: individuals')
# visualize MCA
plot(mca, invisible=c("var"), habillage = "quali", main='MCA factor map: individuals')
plot(mca, invisible=c("var"), habillage = "quali")
plot(mca, habillage = "quali")
plot(mca, invisible=c("ind"), habillage = "quali")
plot(mca, invisible=c("ind"), habillage = "quali") + title(main = 'MCA factor map variables')
# visualize MCA
plot(mca, invisible=c("var"), habillage = "quali")
library(dplyr)
cor(human) %>% corrplot()
corrplot(corr(human))
corrplot(cor(human))
# visualize the dataset
gather(tea_time) dplyr::%>% ggplot(aes(value)) + geom_bar() + facet_wrap("key", scales = "free") + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
# visualize the dataset
gather(tea_time) %>% ggplot(aes(value)) + geom_bar() + facet_wrap("key", scales = "free") + theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8))
install.packages(magrittr')
install.packages('magrittr')
install.packages('magrittr')
install.packages("magrittr")
library(magrittr)
library(tidyr)
View(human)
